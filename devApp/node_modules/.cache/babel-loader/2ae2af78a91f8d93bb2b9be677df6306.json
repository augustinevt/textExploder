{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Cell = _interopRequireDefault(require(\"./Cell\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  /* border: solid; */\\n  display: flex;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nvar Wrapper = _styledComponents[\"default\"].div(_templateObject());\n\nvar PatternManager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatternManager, _React$Component);\n\n  function PatternManager(props) {\n    var _this;\n\n    _classCallCheck(this, PatternManager);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatternManager).call(this, props));\n    _this.state = {\n      mouseDown: false,\n      isDrag: false,\n      id: 'vow',\n      val: '',\n      // cells: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n      cells: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onDragOver = _this.onDragOver.bind(_assertThisInitialized(_this));\n    _this.cellMouseDown = _this.cellMouseDown.bind(_assertThisInitialized(_this));\n    _this.mouseDown = _this.mouseDown.bind(_assertThisInitialized(_this));\n    _this.mouseUp = _this.mouseUp.bind(_assertThisInitialized(_this));\n    _this.mouseLeave = _this.mouseLeave.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PatternManager, [{\n    key: \"onDragOver\",\n    value: function onDragOver(i, val) {\n      if (this.state.isDrag && this.mouseDown) {\n        var newCells = _toConsumableArray(this.state.cells);\n\n        newCells[i] = val === 1 || val === 0 ? 2 : 0;\n        this.setState(_objectSpread({}, this.state, {\n          cells: newCells\n        }));\n      }\n    }\n  }, {\n    key: \"cellMouseDown\",\n    value: function cellMouseDown(i, val) {\n      console.log('cellMouseDown');\n      this.setState(_objectSpread({}, this.state, {\n        mouseDown: true,\n        val: val,\n        id: i\n      }));\n    }\n  }, {\n    key: \"mouseDown\",\n    value: function mouseDown(i, val) {\n      console.log('MouseDown');\n    }\n  }, {\n    key: \"mouseUp\",\n    value: function mouseUp() {\n      var newCells = _toConsumableArray(this.state.cells);\n\n      if (!this.state.isDrag) {\n        newCells[this.state.id] = this.state.val === 2 || this.state.val === 0 ? 1 : 0;\n        this.setState({\n          cells: newCells,\n          mouseDown: false\n        });\n      } else {\n        this.setState(_objectSpread({}, this.state, {\n          mouseDown: false,\n          isDrag: false\n        }));\n      }\n\n      var exportVal = [];\n      console.log(exportVal);\n      var measures = 4;\n      var beatsPerMeasure = 4;\n\n      for (var i = 0; i < newCells.length; i++) {\n        if (newCells[i] === 2) {\n          var beats = 0;\n          var event = {\n            time: \"0:0:\".concat(i * 2)\n          };\n\n          while (newCells[i] === 2) {\n            i++;\n            beats += 2;\n          }\n\n          event.duration = \"0:0:\".concat(beats);\n          exportVal.push(event);\n        } else if (newCells[i] === 1) {\n          var _event = {\n            time: \"0:0:\".concat(i * 2),\n            duration: \"0:0:2\"\n          };\n          exportVal.push(_event);\n        }\n      }\n\n      this.props.handler(exportVal);\n    }\n  }, {\n    key: \"mouseLeave\",\n    value: function mouseLeave(i, val) {\n      if (!this.state.isDrag && this.state.mouseDown) {\n        var newCells = _toConsumableArray(this.state.cells);\n\n        newCells[this.state.id] = this.state.val === 0 || this.state.val === 1 ? 2 : 0;\n        this.setState({\n          cells: newCells,\n          isDrag: true\n        });\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(i) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var jsx3 = this.state.mouseDown ? _react[\"default\"].createElement(\"div\", null, \" mY \") : _react[\"default\"].createElement(\"div\", null, \" mN \");\n      var jsx4 = this.state.isDrag ? _react[\"default\"].createElement(\"div\", null, \" dY \") : _react[\"default\"].createElement(\"div\", null, \" dN \");\n      return _react[\"default\"].createElement(Wrapper, {\n        onMouseUp: this.mouseUp\n      }, this.state.cells.map(function (cellVal, i) {\n        return _react[\"default\"].createElement(_Cell[\"default\"], {\n          cellVal: cellVal,\n          index: i,\n          onClick: _this2.onClick,\n          onDragOver: _this2.onDragOver // mouseDown={this.state.mouseDown}\n          ,\n          mouseLeave: _this2.mouseLeave,\n          cellMouseDown: _this2.cellMouseDown\n        });\n      }));\n    }\n  }]);\n\n  return PatternManager;\n}(_react[\"default\"].Component);\n\nvar _default = PatternManager;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}