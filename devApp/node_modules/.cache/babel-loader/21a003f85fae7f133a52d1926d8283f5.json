{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  if (obj != null) {\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n\\n  &:hover {\\n    color: black;\\n  }\\n\\n  &:active, &:focus {\\n    /* text-decoration: underline; */\\n    color: black;\\n    border: none;\\n    outline: none;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nvar Inter = _styledComponents[\"default\"].span(_templateObject(), function (_ref) {\n  var init = _ref.init;\n  return init ? 'black' : 'grey';\n});\n\nfunction _default(_ref2) {\n  var text = _ref2.text,\n      addItemHandler = _ref2.addItemHandler,\n      edit = _ref2.edit,\n      init = _ref2.init,\n      _ref2$onClick = _ref2.onClick,\n      _onClick = _ref2$onClick === void 0 ? function () {} : _ref2$onClick;\n\n  var _useState = (0, _react.useState)(text),\n      _useState2 = _slicedToArray(_useState, 2),\n      newText = _useState2[0],\n      setNewText = _useState2[1];\n\n  var onChange = function onChange(_ref3) {\n    var innerHTML = _ref3.target.innerHTML;\n    setNewText(innerHTML);\n  };\n\n  var changeHandler = function changeHandler() {\n    addItemHandler(newText);\n  };\n\n  var onKeyPress = function onKeyPress(e) {\n    e.preventDefault();\n\n    if (e.keyCode == 13) {\n      addItemHandler(newText);\n    }\n  };\n\n  console.log('snippet', init, text);\n  return _react[\"default\"].createElement(Inter, {\n    onClick: function onClick() {\n      return !edit && _onClick();\n    },\n    init: init,\n    contentEditable: edit,\n    dangerouslySetInnerHTML: {\n      __html: text\n    },\n    onBlur: function onBlur() {\n      return edit && changeHandler();\n    },\n    onKeyUp: onKeyPress,\n    onInput: onChange\n  });\n}","map":null,"metadata":{},"sourceType":"script"}