{"ast":null,"code":"import _slicedToArray from \"/Users/augustinevontrapp/hustle2019/component-tester/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/augustinevontrapp/hustle2019/component-tester/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/augustinevontrapp/hustle2019/component-tester/src/App.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  border: solid;\\n  display: flex;\\n  height: 25vh;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  border-left: solid;\\n  width: 100%;\\n  height: 100%;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  /* border: solid; */\\n  width: 100%;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components'; // import logo from './logo.svg';\n\nimport './App.css';\nimport MusicUI from 'sequencer';\nimport Khord from 'chord-generator';\nconst chordGenerator = Khord.chordGenerator;\nconst getRandomProgression = chordGenerator.getRandomProgression;\nconst ProgressionChordOptions = MusicUI.ProgressionChordOptions,\n      ProgressionWorkbench = MusicUI.ProgressionWorkbench,\n      ProgressionPatternOptions = MusicUI.ProgressionPatternOptions;\nconst Workbench = styled.div(_templateObject());\nconst Options = styled.div(_templateObject2());\nconst Wrapper = styled.div(_templateObject3());\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        chords = _useState2[0],\n        setChords = _useState2[1];\n\n  const _useState3 = useState('B'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        key = _useState4[0],\n        setKey = _useState4[1];\n\n  const _useState5 = useState('Major'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        mode = _useState6[0],\n        setMode = _useState6[1];\n\n  console.log(getRandomProgression({\n    key,\n    mode,\n    theme: null\n  }));\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Workbench, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(ProgressionWorkbench, {\n    chords: chords,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Options, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ProgressionPatternOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(ProgressionChordOptions, {\n    onSubmit: () => setChords(getRandomProgression({\n      key,\n      mode,\n      theme: null\n    })),\n    onKeyChange: () => setKey('B'),\n    onModeChange: () => setMode('Major'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/augustinevontrapp/hustle2019/component-tester/src/App.js"],"names":["React","useState","styled","MusicUI","Khord","chordGenerator","getRandomProgression","ProgressionChordOptions","ProgressionWorkbench","ProgressionPatternOptions","Workbench","div","Options","Wrapper","App","chords","setChords","key","setKey","mode","setMode","console","log","theme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;MAEQC,c,GAAmBD,K,CAAnBC,c;MAGNC,oB,GACED,c,CADFC,oB;MAIAC,uB,GAGEJ,O,CAHFI,uB;MACAC,oB,GAEEL,O,CAFFK,oB;MACAC,yB,GACEN,O,CADFM,yB;AAGF,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAV,mBAAf;AAIA,MAAMC,OAAO,GAAGV,MAAM,CAACS,GAAV,oBAAb;AAMA,MAAME,OAAO,GAAGX,MAAM,CAACS,GAAV,oBAAb;;AAMA,SAASG,GAAT,GAAe;AAAA,oBAEeb,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAENc,MAFM;AAAA,QAEEC,SAFF;;AAAA,qBAGSf,QAAQ,CAAC,GAAD,CAHjB;AAAA;AAAA,QAGNgB,GAHM;AAAA,QAGDC,MAHC;;AAAA,qBAIWjB,QAAQ,CAAC,OAAD,CAJnB;AAAA;AAAA,QAINkB,IAJM;AAAA,QAIAC,OAJA;;AAMbC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,oBAAoB,CAAC;AAC/BW,IAAAA,GAD+B;AAE/BE,IAAAA,IAF+B;AAG/BI,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAhC;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAsB,IAAA,MAAM,EAAER,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,uBAAD;AACE,IAAA,QAAQ,EACN,MAAMC,SAAS,CAACV,oBAAoB,CAClC;AACEW,MAAAA,GADF;AAEEE,MAAAA,IAFF;AAGEI,MAAAA,KAAK,EAAE;AAHT,KADkC,CAArB,CAFnB;AASE,IAAA,WAAW,EAAG,MAAML,MAAM,CAAC,GAAD,CAT5B;AAUE,IAAA,YAAY,EAAG,MAAME,OAAO,CAAC,OAAD,CAV9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADF,CADF;AA4BD;;AAED,eAAeN,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components'\n// import logo from './logo.svg';\nimport './App.css';\n\nimport MusicUI from 'sequencer'\nimport Khord from 'chord-generator'\n\nconst { chordGenerator } = Khord\n\nconst {\n  getRandomProgression\n} = chordGenerator;\n\nconst {\n  ProgressionChordOptions,\n  ProgressionWorkbench,\n  ProgressionPatternOptions\n} = MusicUI\n\nconst Workbench = styled.div`\n  /* border: solid; */\n  width: 100%;\n`\nconst Options = styled.div`\n  border-left: solid;\n  width: 100%;\n  height: 100%;\n`\n\nconst Wrapper = styled.div`\n  border: solid;\n  display: flex;\n  height: 25vh;\n`\n\nfunction App() {\n\n  const [chords, setChords] = useState([])\n  const [key, setKey] = useState('B')\n  const [mode, setMode] = useState('Major')\n\n  console.log(getRandomProgression({\n    key,\n    mode,\n    theme: null\n  }\n  ))\n  return (\n    <div className=\"App\">\n      <Wrapper>\n\n        <Workbench>\n          <ProgressionWorkbench chords={chords} />\n        </Workbench>\n\n        <Options>\n          <ProgressionPatternOptions/>\n          <ProgressionChordOptions\n            onSubmit={\n              () => setChords(getRandomProgression(\n                {\n                  key,\n                  mode,\n                  theme: null\n                }\n              ))}\n            onKeyChange={ () => setKey('B') }\n            onModeChange={ () => setMode('Major')}\n          />\n        </Options>\n\n      </Wrapper>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}